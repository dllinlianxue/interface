<?php
/**
 * Created by PhpStorm.
 * User: intern
 * Date: 2017/11/29
 * Time: 上午9:37
 */
namespace app\api\controller;

use app\common\lib\exception\ApiException;
use think\Cache;
use think\Controller;
use think\Exception;

class Common extends Controller {
    public function _initialize()
    {
//        $this->checkSign();
        parent::_initialize(); // TODO: Change the autogenerated stub
    }
    public function checkSign() {

        //获取sign请求参数
        $header = request()->header();
        $param = input('param.');

        if (empty($header['sign']) || empty($header['time']) || empty($header['did'])){
           throw new ApiException('缺少sign参数',400);
        }
        $param['did'] = $header['did'];
        $param['time'] = $header['time'];
        //排序
        ksort($param);
//        dump($param);exit();
        //拼接
        $str = http_build_query($param);
//        dump($str);exit();
        //加密
//        $str1 = md5($str);
//        $str2 = strtoupper($str1);
//        $str3 = $str2.config('app.sign_config_type');
//        $str4 = md5($str3);

        $str1 = md5(strtoupper(md5($str)).config('app.sign_config_type'));

//        dump($str1);

        //sign签名认证
        if ($str1 != $header['sign']) {
            throw new ApiException('认证失败',401);
        }

        //sign  time认证
        if (time() - $header['time'] > config('app.sign_time')) {
            throw new ApiException('认证超时',401);
        }


        //sign  唯一性
        if (Cache::get($header['sign'])) {
            throw new ApiException('sign重复认证',401);
        }

        //缓存sign 注意:sign在缓存里的时间大于运行time()
        Cache::set($header['sign'],'1',config('app.cache_time'));
    }
}